#!/bin/bash

set -o xtrace
set -o nounset
set -o errexit


################################################################################
#
# Build the static and executable jar packages for the $1 project.
#
################################################################################

./grunt-tc clean validate:js:common validate:js:$1 test:unit:common test:unit:$1 compile:$1 emitAbTestInfo
./sbt-tc "project $1" compile test assembly


################################################################################
#
# Build the Magenta deployable.
#
################################################################################

echo "Disting $1/target/artifacts.zip"


# Remove previous Play Assembly "artifacts.zip" file
rm -f "$1/target/artifacts.zip"
rm -fr "$1/target/dist"

# Generate folder for the application jar.
mkdir -p "$1/target/dist/packages/frontend-$1"


# Copy packages to dist directory
cp "$1/conf/deploy.json" "$1/target/dist/"
cp "$1/target/scala-2.10/frontend-$1.jar" "$1/target/dist/packages/frontend-$1/"
cp -r "static/target" "$1/target/dist/packages/frontend-static/"
cp -r "$PWD/static/abtests.json" "$1/target/dist/packages/frontend-abtests"

# Generate folder for the application zip.
mkdir -p "$1/target/dist/packages/$1"
./sbt-tc "project $1" dist
cp "$1/target/universal/$1.zip" "$1/target/dist/packages/$1/"

# And zip up the packet
cd "$1/target/dist"
zip -r "../artifacts.zip" .


echo "##teamcity[publishArtifacts '$1/target/artifacts.zip => .']"
echo "Done disting."
